{"version":3,"sources":["api/goods.js","components/GoodsList/GoodsList.js","App.js","index.js"],"names":["getAll","fetch","then","response","ok","Error","status","json","get5First","goods","sort","a","b","name","localeCompare","slice","getRedGoods","filter","good","color","GoodsList","map","id","key","style","App","state","getGoods","f","result","setState","this","type","className","onClick","React","Component","ReactDOM","render","document","getElementById"],"mappings":"kQAGO,SAASA,IACd,OAAOC,MAHI,yEAIRC,MAAK,SAACC,GACL,IAAKA,EAASC,GACZ,MAAM,IAAIC,MAAJ,UAAaF,EAASG,SAG9B,OAAOH,EAASI,UAEjBL,MAAK,SAAAK,GAAI,OAAIA,KAGX,IAAMC,EAAY,kBACvBR,IACGE,MAAK,SAAAO,GAAK,OAAIA,EAAMC,MAAK,SAACC,EAAGC,GAAJ,OAAWD,EAAEE,KAAKC,cAAcF,EAAEC,YAC3DX,MAAK,SAAAO,GAAK,OAAIA,EAAMM,MAAM,EAAG,OAGrBC,EAAc,kBACzBhB,IACGE,MAAK,SAAAO,GAAK,OAAIA,EAAMQ,QAAO,SAAAC,GAAI,MAAmB,QAAfA,EAAKC,aCnBhCC,G,MAAY,SAAC,GAAD,IAAGX,EAAH,EAAGA,MAAH,OACvB,4BACGA,EAAMY,KAAI,gBAAGC,EAAH,EAAGA,GAAIT,EAAP,EAAOA,KAAMM,EAAb,EAAaA,MAAb,OACT,wBACEI,IAAKD,EACLE,MAAO,CAAEL,UAERN,SC4CMY,G,kNAhDbC,MAAQ,CACNjB,MAAO,I,EAGTkB,SAAW,SAACC,GACVA,IAAI1B,MAAK,SAAA2B,GAAM,OAAI,EAAKC,SAAS,CAAErB,MAAOoB,Q,4CAG5C,WAAU,IAAD,OACCpB,EAAUsB,KAAKL,MAAfjB,MAER,OACE,oCACE,4BACE,0CACA,0CACA,yCAGF,4BACEuB,KAAK,SACLC,UAAU,QACVC,QAAS,kBAAM,EAAKP,SAAS3B,KAH/B,kBAQA,4BACEgC,KAAK,SACLC,UAAU,OACVC,QAAS,kBAAM,EAAKP,SAASnB,KAH/B,sBAQA,4BACEwB,KAAK,SACLC,UAAU,MACVC,QAAS,kBAAM,EAAKP,SAASX,KAH/B,kBAOA,kBAAC,EAAD,CAAWP,MAAOA,S,GA3CR0B,IAAMC,YCFxBC,IAASC,OACP,kBAAC,EAAD,MACAC,SAASC,eAAe,U","file":"static/js/main.eb7a0813.chunk.js","sourcesContent":["// eslint-disable-next-line\nconst API_URL = `https://mate-academy.github.io/react_dynamic-list-of-goods/goods.json`;\r\n\nexport function getAll() {\n  return fetch(API_URL)\n    .then((response) => {\n      if (!response.ok) {\n        throw new Error(`${response.status}`);\n      }\n\n      return response.json();\n    })\n    .then(json => json);\n}\n\nexport const get5First = () => (\n  getAll()\n    .then(goods => goods.sort((a, b) => (a.name.localeCompare(b.name))))\n    .then(goods => goods.slice(0, 5))\n);\n\nexport const getRedGoods = () => (\n  getAll()\n    .then(goods => goods.filter(good => good.color === 'red'))\n);\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport './GoodsList.scss';\n\nexport const GoodsList = ({ goods }) => (\n  <ul>\n    {goods.map(({ id, name, color }) => (\n      <li\n        key={id}\n        style={{ color }}\n      >\n        {name}\n      </li>\n    ))}\n  </ul>\n);\n\nGoodsList.propTypes = {\n  goods: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      name: PropTypes.string.isRequired,\n      color: PropTypes.string.isRequired,\n    }),\n  ).isRequired,\n};\n","import React from 'react';\nimport { getAll, get5First, getRedGoods } from './api/goods';\nimport { GoodsList } from './components/GoodsList';\n\nimport './App.scss';\n\nclass App extends React.Component {\n  state = {\n    goods: [],\n  }\n\n  getGoods = (f) => {\n    f().then(result => this.setState({ goods: result }));\n  }\n\n  render() {\n    const { goods } = this.state;\n\n    return (\n      <>\n        <h1>\n          <span> Dynamic</span>\n          <span> list of</span>\n          <span> Goods</span>\n        </h1>\n\n        <button\n          type=\"button\"\n          className=\"green\"\n          onClick={() => this.getGoods(getAll)}\n        >\n          Load All goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"blue\"\n          onClick={() => this.getGoods(get5First)}\n        >\n          Load 5 first goods\n        </button>\n\n        <button\n          type=\"button\"\n          className=\"red\"\n          onClick={() => this.getGoods(getRedGoods)}\n        >\n          Load red goods\n        </button>\n        <GoodsList goods={goods} />\n      </>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}